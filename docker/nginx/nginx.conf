user  nginx;
worker_processes  2;
 
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
 
events {
 # as mentioned on line 2 there will be 2 worker process
 # so in total 2*1024 = 2048 connections can be handled at a time
 worker_connections  1024;
}
 
http {
 # it includes support for all generic mime types.
 include       /etc/nginx/mime.types;
 # It mentioned default mime type
 default_type  application/octet-stream;
 
 log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
 '$status $body_bytes_sent "$http_referer" '
 '"$http_user_agent" "$http_x_forwarded_for"';
 
 access_log  /var/log/nginx/access.log  main;
 
 sendfile        on;
 
 upstream base {
   # "django" is the web project as docker service.
   server django:8000;
 }
 
 server {
 
   # setting charset to utf-8
   charset     utf-8;
   # making nginx listen on port 8000
   listen      8000;
   # servername is assigned here
   server_name localhost;
 
   # routing all request which includes url meda to /app/media/ so this traffic can be served by nginx
   location /static/ {
       alias /app/static/;
   }
 
   # routing all request which includes url meda to /app/media/ so this traffic can be served by nginx
   location /media/ {
       alias /app/media/;
   }
 
   location / {
     # checks for static file, if not found proxy to app
     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
     proxy_set_header Host $http_host;
     proxy_redirect off;
    
     # base is upstream object as mentioned on line 23,
     # basically it is pointing to django docker service as mentioned in docker-compose.yml
     proxy_pass http://base;
 
   }
 }
}
